// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PaginationComponent /> should work 1`] = `
<WithStyles(injectIntl(PaginationComponent))
  current={2}
  handlePageChange={[MockFunction]}
  maxShownPages={5}
  pageCount={8}
>
  <injectIntl(PaginationComponent)
    classes={
      Object {
        "arrowFlip": "injectIntl(PaginationComponent)-arrowFlip-2",
        "arrowIcon": "injectIntl(PaginationComponent)-arrowIcon-1",
        "borderBlack": "injectIntl(PaginationComponent)-borderBlack-3",
        "button": "injectIntl(PaginationComponent)-button-4",
        "buttonContainer": "injectIntl(PaginationComponent)-buttonContainer-5",
        "list": "injectIntl(PaginationComponent)-list-6",
        "listContainer": "injectIntl(PaginationComponent)-listContainer-7",
        "pageElement": "injectIntl(PaginationComponent)-pageElement-8",
        "pageElementActive": "injectIntl(PaginationComponent)-pageElementActive-9",
        "pageItem": "injectIntl(PaginationComponent)-pageItem-10",
      }
    }
    current={2}
    handlePageChange={[MockFunction]}
    maxShownPages={5}
    pageCount={8}
  >
    <PaginationComponent
      classes={
        Object {
          "arrowFlip": "injectIntl(PaginationComponent)-arrowFlip-2",
          "arrowIcon": "injectIntl(PaginationComponent)-arrowIcon-1",
          "borderBlack": "injectIntl(PaginationComponent)-borderBlack-3",
          "button": "injectIntl(PaginationComponent)-button-4",
          "buttonContainer": "injectIntl(PaginationComponent)-buttonContainer-5",
          "list": "injectIntl(PaginationComponent)-list-6",
          "listContainer": "injectIntl(PaginationComponent)-listContainer-7",
          "pageElement": "injectIntl(PaginationComponent)-pageElement-8",
          "pageElementActive": "injectIntl(PaginationComponent)-pageElementActive-9",
          "pageItem": "injectIntl(PaginationComponent)-pageItem-10",
        }
      }
      current={2}
      handlePageChange={[MockFunction]}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatDateToParts": [Function],
          "formatDisplayName": [Function],
          "formatList": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatNumberToParts": [Function],
          "formatPlural": [Function],
          "formatRelativeTime": [Function],
          "formatTime": [Function],
          "formatTimeToParts": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getDisplayNames": [Function],
            "getListFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralRules": [Function],
            "getRelativeTimeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
            "general.pagination.next": "Seuraava sivu",
            "general.pagination.openPage": "Avaa sivu {count}",
            "general.pagination.previous": "Aiempi sivu",
          },
          "onError": [Function],
          "textComponent": Symbol(react.fragment),
          "timeZone": undefined,
          "wrapRichTextChunksInFragment": false,
        }
      }
      maxShownPages={5}
      pageCount={8}
    >
      <WithStyles(Container)
        className="injectIntl(PaginationComponent)-buttonContainer-5"
      >
        <Container
          className="injectIntl(PaginationComponent)-buttonContainer-5"
          classes={
            Object {
              "margin": "Container-margin-13",
              "noMargin": "Container-noMargin-15",
              "root": "Container-root-11",
              "text": "Container-text-14",
              "title": "Container-title-12",
            }
          }
          margin={false}
          noMargin={false}
          paper={false}
          text={false}
          title={null}
          titleComponent="h3"
        >
          <DivWrapper
            className="Container-root-11    injectIntl(PaginationComponent)-buttonContainer-5"
          >
            <div
              className="Container-root-11    injectIntl(PaginationComponent)-buttonContainer-5"
            >
              <injectIntl(WithStyles(SMButton))
                aria-label="Aiempi sivu"
                className="injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-arrowFlip-2 injectIntl(PaginationComponent)-borderBlack-3"
                color="primary"
                disabled={false}
                onClick={[Function]}
                role="link"
                variant="contained"
              >
                <WithStyles(SMButton)
                  aria-label="Aiempi sivu"
                  className="injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-arrowFlip-2 injectIntl(PaginationComponent)-borderBlack-3"
                  color="primary"
                  disabled={false}
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatDateToParts": [Function],
                      "formatDisplayName": [Function],
                      "formatList": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatNumberToParts": [Function],
                      "formatPlural": [Function],
                      "formatRelativeTime": [Function],
                      "formatTime": [Function],
                      "formatTimeToParts": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getDisplayNames": [Function],
                        "getListFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralRules": [Function],
                        "getRelativeTimeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {
                        "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                        "general.pagination.next": "Seuraava sivu",
                        "general.pagination.openPage": "Avaa sivu {count}",
                        "general.pagination.previous": "Aiempi sivu",
                      },
                      "onError": [Function],
                      "textComponent": Symbol(react.fragment),
                      "timeZone": undefined,
                      "wrapRichTextChunksInFragment": false,
                    }
                  }
                  onClick={[Function]}
                  role="link"
                  variant="contained"
                >
                  <SMButton
                    aria-label="Aiempi sivu"
                    className="injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-arrowFlip-2 injectIntl(PaginationComponent)-borderBlack-3"
                    classes={
                      Object {
                        "button": "SMButton-button-16",
                        "default": "SMButton-default-22",
                        "margin": "SMButton-margin-18",
                        "marginRight": "SMButton-marginRight-19",
                        "primary": "SMButton-primary-20",
                        "secondary": "SMButton-secondary-21",
                        "smallButton": "SMButton-smallButton-17",
                        "typography": "SMButton-typography-23",
                      }
                    }
                    color="primary"
                    disabled={false}
                    icon={null}
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                          "general.pagination.next": "Seuraava sivu",
                          "general.pagination.openPage": "Avaa sivu {count}",
                          "general.pagination.previous": "Aiempi sivu",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": false,
                      }
                    }
                    margin={false}
                    messageID={null}
                    onClick={[Function]}
                    role="link"
                    small={false}
                    style={null}
                    variant="contained"
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      aria-label="Aiempi sivu"
                      className="SMButton-button-16  SMButton-marginRight-19 injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-arrowFlip-2 injectIntl(PaginationComponent)-borderBlack-3 SMButton-primary-20"
                      disabled={false}
                      icon={null}
                      onClick={[Function]}
                      role="link"
                      style={Object {}}
                      variant="contained"
                    >
                      <ForwardRef(ButtonBase)
                        aria-label="Aiempi sivu"
                        className="SMButton-button-16  SMButton-marginRight-19 injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-arrowFlip-2 injectIntl(PaginationComponent)-borderBlack-3 SMButton-primary-20"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        disableRipple={true}
                        disabled={false}
                        icon={null}
                        onClick={[Function]}
                        role="link"
                        style={Object {}}
                        variant="contained"
                      >
                        <button
                          aria-label="Aiempi sivu"
                          className="MuiButtonBase-root SMButton-button-16  SMButton-marginRight-19 injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-arrowFlip-2 injectIntl(PaginationComponent)-borderBlack-3 SMButton-primary-20"
                          disabled={false}
                          icon={null}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="link"
                          style={Object {}}
                          tabIndex={0}
                          type="button"
                          variant="contained"
                        >
                          <pure(ArrowForwardIosIcon)
                            className="injectIntl(PaginationComponent)-arrowIcon-1"
                          >
                            <ArrowForwardIosIcon
                              className="injectIntl(PaginationComponent)-arrowIcon-1"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                className="injectIntl(PaginationComponent)-arrowIcon-1"
                              >
                                <ForwardRef(SvgIcon)
                                  className="injectIntl(PaginationComponent)-arrowIcon-1"
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root injectIntl(PaginationComponent)-arrowIcon-1"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z"
                                    />
                                    <path
                                      d="M0 0h24v24H0z"
                                      fill="none"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ArrowForwardIosIcon>
                          </pure(ArrowForwardIosIcon)>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </SMButton>
                </WithStyles(SMButton)>
              </injectIntl(WithStyles(SMButton))>
              <injectIntl(WithStyles(SMButton))
                aria-label="Seuraava sivu"
                className="injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-borderBlack-3"
                color="primary"
                disabled={false}
                onClick={[Function]}
                role="link"
                variant="contained"
              >
                <WithStyles(SMButton)
                  aria-label="Seuraava sivu"
                  className="injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-borderBlack-3"
                  color="primary"
                  disabled={false}
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatDateToParts": [Function],
                      "formatDisplayName": [Function],
                      "formatList": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatNumberToParts": [Function],
                      "formatPlural": [Function],
                      "formatRelativeTime": [Function],
                      "formatTime": [Function],
                      "formatTimeToParts": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getDisplayNames": [Function],
                        "getListFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralRules": [Function],
                        "getRelativeTimeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {
                        "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                        "general.pagination.next": "Seuraava sivu",
                        "general.pagination.openPage": "Avaa sivu {count}",
                        "general.pagination.previous": "Aiempi sivu",
                      },
                      "onError": [Function],
                      "textComponent": Symbol(react.fragment),
                      "timeZone": undefined,
                      "wrapRichTextChunksInFragment": false,
                    }
                  }
                  onClick={[Function]}
                  role="link"
                  variant="contained"
                >
                  <SMButton
                    aria-label="Seuraava sivu"
                    className="injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-borderBlack-3"
                    classes={
                      Object {
                        "button": "SMButton-button-16",
                        "default": "SMButton-default-22",
                        "margin": "SMButton-margin-18",
                        "marginRight": "SMButton-marginRight-19",
                        "primary": "SMButton-primary-20",
                        "secondary": "SMButton-secondary-21",
                        "smallButton": "SMButton-smallButton-17",
                        "typography": "SMButton-typography-23",
                      }
                    }
                    color="primary"
                    disabled={false}
                    icon={null}
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                          "general.pagination.next": "Seuraava sivu",
                          "general.pagination.openPage": "Avaa sivu {count}",
                          "general.pagination.previous": "Aiempi sivu",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": false,
                      }
                    }
                    margin={false}
                    messageID={null}
                    onClick={[Function]}
                    role="link"
                    small={false}
                    style={null}
                    variant="contained"
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      aria-label="Seuraava sivu"
                      className="SMButton-button-16  SMButton-marginRight-19 injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-borderBlack-3 SMButton-primary-20"
                      disabled={false}
                      icon={null}
                      onClick={[Function]}
                      role="link"
                      style={Object {}}
                      variant="contained"
                    >
                      <ForwardRef(ButtonBase)
                        aria-label="Seuraava sivu"
                        className="SMButton-button-16  SMButton-marginRight-19 injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-borderBlack-3 SMButton-primary-20"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        disableRipple={true}
                        disabled={false}
                        icon={null}
                        onClick={[Function]}
                        role="link"
                        style={Object {}}
                        variant="contained"
                      >
                        <button
                          aria-label="Seuraava sivu"
                          className="MuiButtonBase-root SMButton-button-16  SMButton-marginRight-19 injectIntl(PaginationComponent)-button-4 injectIntl(PaginationComponent)-borderBlack-3 SMButton-primary-20"
                          disabled={false}
                          icon={null}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="link"
                          style={Object {}}
                          tabIndex={0}
                          type="button"
                          variant="contained"
                        >
                          <pure(ArrowForwardIosIcon)
                            className="injectIntl(PaginationComponent)-arrowIcon-1"
                          >
                            <ArrowForwardIosIcon
                              className="injectIntl(PaginationComponent)-arrowIcon-1"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                className="injectIntl(PaginationComponent)-arrowIcon-1"
                              >
                                <ForwardRef(SvgIcon)
                                  className="injectIntl(PaginationComponent)-arrowIcon-1"
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root injectIntl(PaginationComponent)-arrowIcon-1"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z"
                                    />
                                    <path
                                      d="M0 0h24v24H0z"
                                      fill="none"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ArrowForwardIosIcon>
                          </pure(ArrowForwardIosIcon)>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </SMButton>
                </WithStyles(SMButton)>
              </injectIntl(WithStyles(SMButton))>
              <WithStyles(Container)
                className="injectIntl(PaginationComponent)-listContainer-7"
              >
                <Container
                  className="injectIntl(PaginationComponent)-listContainer-7"
                  classes={
                    Object {
                      "margin": "Container-margin-13",
                      "noMargin": "Container-noMargin-15",
                      "root": "Container-root-11",
                      "text": "Container-text-14",
                      "title": "Container-title-12",
                    }
                  }
                  margin={false}
                  noMargin={false}
                  paper={false}
                  text={false}
                  title={null}
                  titleComponent="h3"
                >
                  <DivWrapper
                    className="Container-root-11    injectIntl(PaginationComponent)-listContainer-7"
                  >
                    <div
                      className="Container-root-11    injectIntl(PaginationComponent)-listContainer-7"
                    >
                      <ul
                        className="injectIntl(PaginationComponent)-list-6"
                      >
                        <injectIntl(WithStyles(PageElement))
                          isActive={false}
                          key="1"
                          number={1}
                          onClick={[Function]}
                        >
                          <WithStyles(PageElement)
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {
                                  "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                  "general.pagination.next": "Seuraava sivu",
                                  "general.pagination.openPage": "Avaa sivu {count}",
                                  "general.pagination.previous": "Aiempi sivu",
                                },
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": false,
                              }
                            }
                            isActive={false}
                            number={1}
                            onClick={[Function]}
                          >
                            <PageElement
                              className=""
                              classes={
                                Object {
                                  "arrowFlip": "PageElement-arrowFlip-25",
                                  "arrowIcon": "PageElement-arrowIcon-24",
                                  "borderBlack": "PageElement-borderBlack-26",
                                  "button": "PageElement-button-27",
                                  "buttonContainer": "PageElement-buttonContainer-28",
                                  "list": "PageElement-list-29",
                                  "listContainer": "PageElement-listContainer-30",
                                  "pageElement": "PageElement-pageElement-31",
                                  "pageElementActive": "PageElement-pageElementActive-32",
                                  "pageItem": "PageElement-pageItem-33",
                                }
                              }
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {
                                    "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                    "general.pagination.next": "Seuraava sivu",
                                    "general.pagination.openPage": "Avaa sivu {count}",
                                    "general.pagination.previous": "Aiempi sivu",
                                  },
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": false,
                                }
                              }
                              isActive={false}
                              number={1}
                              onClick={[Function]}
                            >
                              <li>
                                <WithStyles(ForwardRef(ButtonBase))
                                  disabled={false}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="link"
                                  tabIndex="0"
                                >
                                  <ForwardRef(ButtonBase)
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disableRipple={true}
                                    disabled={false}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    role="link"
                                    tabIndex="0"
                                  >
                                    <button
                                      className="MuiButtonBase-root"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="link"
                                      tabIndex="0"
                                      type="button"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className=" PageElement-pageItem-33 PageElement-pageElement-31"
                                        component="p"
                                        variant="subtitle1"
                                      >
                                        <ForwardRef(Typography)
                                          className=" PageElement-pageItem-33 PageElement-pageElement-31"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="p"
                                          variant="subtitle1"
                                        >
                                          <p
                                            className="MuiTypography-root  PageElement-pageItem-33 PageElement-pageElement-31 MuiTypography-subtitle1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              variant="srOnly"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="srOnly"
                                              >
                                                <span
                                                  className="MuiTypography-root MuiTypography-srOnly"
                                                >
                                                  Avaa sivu 1
                                                </span>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                            <span
                                              aria-hidden="true"
                                            >
                                              1
                                            </span>
                                          </p>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </li>
                            </PageElement>
                          </WithStyles(PageElement)>
                        </injectIntl(WithStyles(PageElement))>
                        <injectIntl(WithStyles(PageElement))
                          isActive={true}
                          key="2"
                          number={2}
                          onClick={[Function]}
                        >
                          <WithStyles(PageElement)
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {
                                  "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                  "general.pagination.next": "Seuraava sivu",
                                  "general.pagination.openPage": "Avaa sivu {count}",
                                  "general.pagination.previous": "Aiempi sivu",
                                },
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": false,
                              }
                            }
                            isActive={true}
                            number={2}
                            onClick={[Function]}
                          >
                            <PageElement
                              className=""
                              classes={
                                Object {
                                  "arrowFlip": "PageElement-arrowFlip-25",
                                  "arrowIcon": "PageElement-arrowIcon-24",
                                  "borderBlack": "PageElement-borderBlack-26",
                                  "button": "PageElement-button-27",
                                  "buttonContainer": "PageElement-buttonContainer-28",
                                  "list": "PageElement-list-29",
                                  "listContainer": "PageElement-listContainer-30",
                                  "pageElement": "PageElement-pageElement-31",
                                  "pageElementActive": "PageElement-pageElementActive-32",
                                  "pageItem": "PageElement-pageItem-33",
                                }
                              }
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {
                                    "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                    "general.pagination.next": "Seuraava sivu",
                                    "general.pagination.openPage": "Avaa sivu {count}",
                                    "general.pagination.previous": "Aiempi sivu",
                                  },
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": false,
                                }
                              }
                              isActive={true}
                              number={2}
                              onClick={[Function]}
                            >
                              <li>
                                <WithStyles(ForwardRef(ButtonBase))
                                  disabled={true}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="link"
                                  tabIndex="-1"
                                >
                                  <ForwardRef(ButtonBase)
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disableRipple={true}
                                    disabled={true}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    role="link"
                                    tabIndex="-1"
                                  >
                                    <button
                                      className="MuiButtonBase-root Mui-disabled"
                                      disabled={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="link"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className=" PageElement-pageItem-33 PageElement-pageElementActive-32"
                                        component="p"
                                        variant="subtitle1"
                                      >
                                        <ForwardRef(Typography)
                                          className=" PageElement-pageItem-33 PageElement-pageElementActive-32"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="p"
                                          variant="subtitle1"
                                        >
                                          <p
                                            className="MuiTypography-root  PageElement-pageItem-33 PageElement-pageElementActive-32 MuiTypography-subtitle1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              variant="srOnly"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="srOnly"
                                              >
                                                <span
                                                  className="MuiTypography-root MuiTypography-srOnly"
                                                >
                                                  Sivu 2, avattu
                                                </span>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                            <span
                                              aria-hidden="true"
                                            >
                                              2
                                            </span>
                                          </p>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </li>
                            </PageElement>
                          </WithStyles(PageElement)>
                        </injectIntl(WithStyles(PageElement))>
                        <injectIntl(WithStyles(PageElement))
                          isActive={false}
                          key="3"
                          number={3}
                          onClick={[Function]}
                        >
                          <WithStyles(PageElement)
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {
                                  "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                  "general.pagination.next": "Seuraava sivu",
                                  "general.pagination.openPage": "Avaa sivu {count}",
                                  "general.pagination.previous": "Aiempi sivu",
                                },
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": false,
                              }
                            }
                            isActive={false}
                            number={3}
                            onClick={[Function]}
                          >
                            <PageElement
                              className=""
                              classes={
                                Object {
                                  "arrowFlip": "PageElement-arrowFlip-25",
                                  "arrowIcon": "PageElement-arrowIcon-24",
                                  "borderBlack": "PageElement-borderBlack-26",
                                  "button": "PageElement-button-27",
                                  "buttonContainer": "PageElement-buttonContainer-28",
                                  "list": "PageElement-list-29",
                                  "listContainer": "PageElement-listContainer-30",
                                  "pageElement": "PageElement-pageElement-31",
                                  "pageElementActive": "PageElement-pageElementActive-32",
                                  "pageItem": "PageElement-pageItem-33",
                                }
                              }
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {
                                    "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                    "general.pagination.next": "Seuraava sivu",
                                    "general.pagination.openPage": "Avaa sivu {count}",
                                    "general.pagination.previous": "Aiempi sivu",
                                  },
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": false,
                                }
                              }
                              isActive={false}
                              number={3}
                              onClick={[Function]}
                            >
                              <li>
                                <WithStyles(ForwardRef(ButtonBase))
                                  disabled={false}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="link"
                                  tabIndex="0"
                                >
                                  <ForwardRef(ButtonBase)
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disableRipple={true}
                                    disabled={false}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    role="link"
                                    tabIndex="0"
                                  >
                                    <button
                                      className="MuiButtonBase-root"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="link"
                                      tabIndex="0"
                                      type="button"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className=" PageElement-pageItem-33 PageElement-pageElement-31"
                                        component="p"
                                        variant="subtitle1"
                                      >
                                        <ForwardRef(Typography)
                                          className=" PageElement-pageItem-33 PageElement-pageElement-31"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="p"
                                          variant="subtitle1"
                                        >
                                          <p
                                            className="MuiTypography-root  PageElement-pageItem-33 PageElement-pageElement-31 MuiTypography-subtitle1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              variant="srOnly"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="srOnly"
                                              >
                                                <span
                                                  className="MuiTypography-root MuiTypography-srOnly"
                                                >
                                                  Avaa sivu 3
                                                </span>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                            <span
                                              aria-hidden="true"
                                            >
                                              3
                                            </span>
                                          </p>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </li>
                            </PageElement>
                          </WithStyles(PageElement)>
                        </injectIntl(WithStyles(PageElement))>
                        <injectIntl(WithStyles(PageElement))
                          isActive={false}
                          key="4"
                          number={4}
                          onClick={[Function]}
                        >
                          <WithStyles(PageElement)
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {
                                  "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                  "general.pagination.next": "Seuraava sivu",
                                  "general.pagination.openPage": "Avaa sivu {count}",
                                  "general.pagination.previous": "Aiempi sivu",
                                },
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": false,
                              }
                            }
                            isActive={false}
                            number={4}
                            onClick={[Function]}
                          >
                            <PageElement
                              className=""
                              classes={
                                Object {
                                  "arrowFlip": "PageElement-arrowFlip-25",
                                  "arrowIcon": "PageElement-arrowIcon-24",
                                  "borderBlack": "PageElement-borderBlack-26",
                                  "button": "PageElement-button-27",
                                  "buttonContainer": "PageElement-buttonContainer-28",
                                  "list": "PageElement-list-29",
                                  "listContainer": "PageElement-listContainer-30",
                                  "pageElement": "PageElement-pageElement-31",
                                  "pageElementActive": "PageElement-pageElementActive-32",
                                  "pageItem": "PageElement-pageItem-33",
                                }
                              }
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {
                                    "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                    "general.pagination.next": "Seuraava sivu",
                                    "general.pagination.openPage": "Avaa sivu {count}",
                                    "general.pagination.previous": "Aiempi sivu",
                                  },
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": false,
                                }
                              }
                              isActive={false}
                              number={4}
                              onClick={[Function]}
                            >
                              <li>
                                <WithStyles(ForwardRef(ButtonBase))
                                  disabled={false}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="link"
                                  tabIndex="0"
                                >
                                  <ForwardRef(ButtonBase)
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disableRipple={true}
                                    disabled={false}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    role="link"
                                    tabIndex="0"
                                  >
                                    <button
                                      className="MuiButtonBase-root"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="link"
                                      tabIndex="0"
                                      type="button"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className=" PageElement-pageItem-33 PageElement-pageElement-31"
                                        component="p"
                                        variant="subtitle1"
                                      >
                                        <ForwardRef(Typography)
                                          className=" PageElement-pageItem-33 PageElement-pageElement-31"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="p"
                                          variant="subtitle1"
                                        >
                                          <p
                                            className="MuiTypography-root  PageElement-pageItem-33 PageElement-pageElement-31 MuiTypography-subtitle1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              variant="srOnly"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="srOnly"
                                              >
                                                <span
                                                  className="MuiTypography-root MuiTypography-srOnly"
                                                >
                                                  Avaa sivu 4
                                                </span>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                            <span
                                              aria-hidden="true"
                                            >
                                              4
                                            </span>
                                          </p>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </li>
                            </PageElement>
                          </WithStyles(PageElement)>
                        </injectIntl(WithStyles(PageElement))>
                        <injectIntl(WithStyles(PageElement))
                          isActive={false}
                          key="5"
                          number={5}
                          onClick={[Function]}
                        >
                          <WithStyles(PageElement)
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {
                                  "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                  "general.pagination.next": "Seuraava sivu",
                                  "general.pagination.openPage": "Avaa sivu {count}",
                                  "general.pagination.previous": "Aiempi sivu",
                                },
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": false,
                              }
                            }
                            isActive={false}
                            number={5}
                            onClick={[Function]}
                          >
                            <PageElement
                              className=""
                              classes={
                                Object {
                                  "arrowFlip": "PageElement-arrowFlip-25",
                                  "arrowIcon": "PageElement-arrowIcon-24",
                                  "borderBlack": "PageElement-borderBlack-26",
                                  "button": "PageElement-button-27",
                                  "buttonContainer": "PageElement-buttonContainer-28",
                                  "list": "PageElement-list-29",
                                  "listContainer": "PageElement-listContainer-30",
                                  "pageElement": "PageElement-pageElement-31",
                                  "pageElementActive": "PageElement-pageElementActive-32",
                                  "pageItem": "PageElement-pageItem-33",
                                }
                              }
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {
                                    "general.pagination.currentlyOpenedPage": "Sivu {count}, avattu",
                                    "general.pagination.next": "Seuraava sivu",
                                    "general.pagination.openPage": "Avaa sivu {count}",
                                    "general.pagination.previous": "Aiempi sivu",
                                  },
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": false,
                                }
                              }
                              isActive={false}
                              number={5}
                              onClick={[Function]}
                            >
                              <li>
                                <WithStyles(ForwardRef(ButtonBase))
                                  disabled={false}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="link"
                                  tabIndex="0"
                                >
                                  <ForwardRef(ButtonBase)
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disableRipple={true}
                                    disabled={false}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    role="link"
                                    tabIndex="0"
                                  >
                                    <button
                                      className="MuiButtonBase-root"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="link"
                                      tabIndex="0"
                                      type="button"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className=" PageElement-pageItem-33 PageElement-pageElement-31"
                                        component="p"
                                        variant="subtitle1"
                                      >
                                        <ForwardRef(Typography)
                                          className=" PageElement-pageItem-33 PageElement-pageElement-31"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="p"
                                          variant="subtitle1"
                                        >
                                          <p
                                            className="MuiTypography-root  PageElement-pageItem-33 PageElement-pageElement-31 MuiTypography-subtitle1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              variant="srOnly"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="srOnly"
                                              >
                                                <span
                                                  className="MuiTypography-root MuiTypography-srOnly"
                                                >
                                                  Avaa sivu 5
                                                </span>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                            <span
                                              aria-hidden="true"
                                            >
                                              5
                                            </span>
                                          </p>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </li>
                            </PageElement>
                          </WithStyles(PageElement)>
                        </injectIntl(WithStyles(PageElement))>
                      </ul>
                    </div>
                  </DivWrapper>
                </Container>
              </WithStyles(Container)>
            </div>
          </DivWrapper>
        </Container>
      </WithStyles(Container)>
    </PaginationComponent>
  </injectIntl(PaginationComponent)>
</WithStyles(injectIntl(PaginationComponent))>
`;
