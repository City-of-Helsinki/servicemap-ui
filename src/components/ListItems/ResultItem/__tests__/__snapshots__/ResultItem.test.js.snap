// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ResultItem /> should work 1`] = `
<WithStyles(ResultItem)
  bottomText="Bottom text"
  distance={
    Object {
      "srText": "100 metrin päässä",
      "text": "100m",
    }
  }
  subtitle="Subtitle text"
  title="Title text"
>
  <ResultItem
    bottomHighlight={false}
    bottomText="Bottom text"
    classes={
      Object {
        "bottomContainer": "ResultItem-bottomContainer-5",
        "bottomHighlight": "ResultItem-bottomHighlight-6",
        "bottomRow": "ResultItem-bottomRow-11",
        "caption": "ResultItem-caption-14",
        "divider": "ResultItem-divider-16",
        "itemTextContainer": "ResultItem-itemTextContainer-9",
        "listItem": "ResultItem-listItem-2",
        "listItemIcon": "ResultItem-listItemIcon-3",
        "listItemIconPadded": "ResultItem-listItemIconPadded-4",
        "listItemPadded": "ResultItem-listItemPadded-1",
        "marginLeft": "ResultItem-marginLeft-12",
        "noMargin": "ResultItem-noMargin-8",
        "rightColumn": "ResultItem-rightColumn-13",
        "text": "ResultItem-text-15",
        "title": "ResultItem-title-7",
        "topRow": "ResultItem-topRow-10",
      }
    }
    distance={
      Object {
        "srText": "100 metrin päässä",
        "text": "100m",
      }
    }
    divider={true}
    extendedClasses={null}
    icon={null}
    onClick={[Function]}
    padded={false}
    role="link"
    selected={false}
    srLabel={null}
    subtitle="Subtitle text"
    title="Title text"
  >
    <WithStyles(ForwardRef(ListItem))
      button={true}
      className="ResultItem-listItem-2"
      component="li"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="link"
      selected={false}
      tabIndex={0}
    >
      <ForwardRef(ListItem)
        button={true}
        className="ResultItem-listItem-2"
        classes={
          Object {
            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
            "button": "MuiListItem-button",
            "container": "MuiListItem-container",
            "dense": "MuiListItem-dense",
            "disabled": "Mui-disabled",
            "divider": "MuiListItem-divider",
            "focusVisible": "Mui-focusVisible",
            "gutters": "MuiListItem-gutters",
            "root": "MuiListItem-root",
            "secondaryAction": "MuiListItem-secondaryAction",
            "selected": "Mui-selected",
          }
        }
        component="li"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="link"
        selected={false}
        tabIndex={0}
      >
        <WithStyles(ForwardRef(ButtonBase))
          className="MuiListItem-root ResultItem-listItem-2 MuiListItem-gutters MuiListItem-button"
          component="li"
          disabled={false}
          focusVisibleClassName="Mui-focusVisible"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="link"
          tabIndex={0}
        >
          <ForwardRef(ButtonBase)
            className="MuiListItem-root ResultItem-listItem-2 MuiListItem-gutters MuiListItem-button"
            classes={
              Object {
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "root": "MuiButtonBase-root",
              }
            }
            component="li"
            disableRipple={true}
            disabled={false}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
            onKeyDown={[Function]}
            role="link"
            tabIndex={0}
          >
            <li
              aria-disabled={false}
              className="MuiButtonBase-root MuiListItem-root ResultItem-listItem-2 MuiListItem-gutters MuiListItem-button"
              onBlur={[Function]}
              onClick={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              role="link"
              tabIndex={0}
            >
              <div
                className="ResultItem-itemTextContainer-9"
                key=".1"
              >
                <div
                  className="ResultItem-topRow-10"
                >
                  <WithStyles(ForwardRef(Typography))
                    className="ResultItem-title-7 ResultItem-srOnly"
                    component="p"
                    variant="srOnly"
                  >
                    <ForwardRef(Typography)
                      className="ResultItem-title-7 ResultItem-srOnly"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      component="p"
                      variant="srOnly"
                    >
                      <p
                        className="MuiTypography-root ResultItem-title-7 ResultItem-srOnly MuiTypography-srOnly"
                      >
                        
    Title text 
    Subtitle text 
    100 metrin päässä 
    Bottom text 
    
  
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <WithStyles(ForwardRef(Typography))
                    aria-hidden="true"
                    className="ResultItem-title-7   ResultItem-title"
                    component="p"
                    role="textbox"
                    variant="body2"
                  >
                    <ForwardRef(Typography)
                      aria-hidden="true"
                      className="ResultItem-title-7   ResultItem-title"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      component="p"
                      role="textbox"
                      variant="body2"
                    >
                      <p
                        aria-hidden="true"
                        className="MuiTypography-root ResultItem-title-7   ResultItem-title MuiTypography-body2"
                        role="textbox"
                      >
                        Title text
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <div
                    className="ResultItem-rightColumn-13"
                  >
                    <WithStyles(ForwardRef(Typography))
                      aria-hidden="true"
                      className="ResultItem-caption-14 ResultItem-text-15 ResultItem-marginLeft-12  ResultItem-distance"
                      component="p"
                      variant="caption"
                    >
                      <ForwardRef(Typography)
                        aria-hidden="true"
                        className="ResultItem-caption-14 ResultItem-text-15 ResultItem-marginLeft-12  ResultItem-distance"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="p"
                        variant="caption"
                      >
                        <p
                          aria-hidden="true"
                          className="MuiTypography-root ResultItem-caption-14 ResultItem-text-15 ResultItem-marginLeft-12  ResultItem-distance MuiTypography-caption"
                        >
                          100m
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </div>
                </div>
                <div>
                  <div>
                    <WithStyles(ForwardRef(Typography))
                      aria-hidden="true"
                      className="ResultItem-noMargin-8 ResultItem-text-15  ResultItem-subtitle"
                      component="p"
                      variant="caption"
                    >
                      <ForwardRef(Typography)
                        aria-hidden="true"
                        className="ResultItem-noMargin-8 ResultItem-text-15  ResultItem-subtitle"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="p"
                        variant="caption"
                      >
                        <p
                          aria-hidden="true"
                          className="MuiTypography-root ResultItem-noMargin-8 ResultItem-text-15  ResultItem-subtitle MuiTypography-caption"
                        >
                          Subtitle text
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </div>
                  <div
                    className="ResultItem-bottomContainer-5 "
                  >
                    <WithStyles(ForwardRef(Typography))
                      aria-hidden="true"
                      className="  ResultItem-bottom"
                      color="inherit"
                      component="p"
                      variant="caption"
                    >
                      <ForwardRef(Typography)
                        aria-hidden="true"
                        className="  ResultItem-bottom"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        color="inherit"
                        component="p"
                        variant="caption"
                      >
                        <p
                          aria-hidden="true"
                          className="MuiTypography-root   ResultItem-bottom MuiTypography-caption MuiTypography-colorInherit"
                        >
                          Bottom text
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </div>
                </div>
              </div>
            </li>
          </ForwardRef(ButtonBase)>
        </WithStyles(ForwardRef(ButtonBase))>
      </ForwardRef(ListItem)>
    </WithStyles(ForwardRef(ListItem))>
    <li
      aria-hidden={true}
    >
      <WithStyles(ForwardRef(Divider))
        className="ResultItem-divider-16"
        variant="inset"
      >
        <ForwardRef(Divider)
          className="ResultItem-divider-16"
          classes={
            Object {
              "absolute": "MuiDivider-absolute",
              "flexItem": "MuiDivider-flexItem",
              "inset": "MuiDivider-inset",
              "light": "MuiDivider-light",
              "middle": "MuiDivider-middle",
              "root": "MuiDivider-root",
              "vertical": "MuiDivider-vertical",
            }
          }
          variant="inset"
        >
          <hr
            className="MuiDivider-root ResultItem-divider-16 MuiDivider-inset"
          />
        </ForwardRef(Divider)>
      </WithStyles(ForwardRef(Divider))>
    </li>
  </ResultItem>
</WithStyles(ResultItem)>
`;
