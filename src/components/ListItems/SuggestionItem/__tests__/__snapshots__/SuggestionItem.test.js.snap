// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SuggestionItem /> should work 1`] = `
<injectIntl(WithStyles(SuggestionItem))
  icon={<pure(SearchIcon) />}
  subtitle="Subtitle text"
  text="Title text"
>
  <WithStyles(SuggestionItem)
    icon={<pure(SearchIcon) />}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatDateToParts": [Function],
        "formatDisplayName": [Function],
        "formatList": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatNumberToParts": [Function],
        "formatPlural": [Function],
        "formatRelativeTime": [Function],
        "formatTime": [Function],
        "formatTimeToParts": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getDisplayNames": [Function],
          "getListFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralRules": [Function],
          "getRelativeTimeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "search.arrowLabel": "Arrow button label",
        },
        "onError": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": undefined,
        "wrapRichTextChunksInFragment": false,
      }
    }
    subtitle="Subtitle text"
    text="Title text"
  >
    <SuggestionItem
      classes={
        Object {
          "container": "SuggestionItem-container-1",
          "divider": "SuggestionItem-divider-8",
          "itemFocus": "SuggestionItem-itemFocus-10",
          "listIcon": "SuggestionItem-listIcon-4",
          "listItem": "SuggestionItem-listItem-2",
          "subtitle": "SuggestionItem-subtitle-7",
          "suggestIcon": "SuggestionItem-suggestIcon-5",
          "suggestIconLabel": "SuggestionItem-suggestIconLabel-6",
          "text": "SuggestionItem-text-9",
          "textContainer": "SuggestionItem-textContainer-3",
        }
      }
      divider={false}
      handleArrowClick={null}
      handleItemClick={null}
      icon={<pure(SearchIcon) />}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatDateToParts": [Function],
          "formatDisplayName": [Function],
          "formatList": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatNumberToParts": [Function],
          "formatPlural": [Function],
          "formatRelativeTime": [Function],
          "formatTime": [Function],
          "formatTimeToParts": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getDisplayNames": [Function],
            "getListFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralRules": [Function],
            "getRelativeTimeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "search.arrowLabel": "Arrow button label",
          },
          "onError": [Function],
          "textComponent": Symbol(react.fragment),
          "timeZone": undefined,
          "wrapRichTextChunksInFragment": false,
        }
      }
      query={null}
      selected={false}
      subtitle="Subtitle text"
      text="Title text"
    >
      <WithStyles(ForwardRef(ListItem))
        button={true}
        className="suggestion"
        classes={
          Object {
            "root": "SuggestionItem-listItem-2",
            "selected": "SuggestionItem-itemFocus-10",
          }
        }
        component="li"
        onClick={null}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={null}
        onMouseUp={[Function]}
        role="link"
        selected={false}
        tabIndex="0"
      >
        <ForwardRef(ListItem)
          button={true}
          className="suggestion"
          classes={
            Object {
              "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
              "button": "MuiListItem-button",
              "container": "MuiListItem-container",
              "dense": "MuiListItem-dense",
              "disabled": "Mui-disabled",
              "divider": "MuiListItem-divider",
              "focusVisible": "Mui-focusVisible",
              "gutters": "MuiListItem-gutters",
              "root": "MuiListItem-root SuggestionItem-listItem-2",
              "secondaryAction": "MuiListItem-secondaryAction",
              "selected": "Mui-selected SuggestionItem-itemFocus-10",
            }
          }
          component="li"
          onClick={null}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={null}
          onMouseUp={[Function]}
          role="link"
          selected={false}
          tabIndex="0"
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiListItem-root SuggestionItem-listItem-2 suggestion MuiListItem-gutters MuiListItem-button"
            component="li"
            disabled={false}
            focusVisibleClassName="Mui-focusVisible"
            onClick={null}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={null}
            onMouseUp={[Function]}
            role="link"
            tabIndex="0"
          >
            <ForwardRef(ButtonBase)
              className="MuiListItem-root SuggestionItem-listItem-2 suggestion MuiListItem-gutters MuiListItem-button"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="li"
              disableRipple={true}
              disabled={false}
              focusVisibleClassName="Mui-focusVisible"
              onClick={null}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={null}
              onMouseUp={[Function]}
              role="link"
              tabIndex="0"
            >
              <li
                aria-disabled={false}
                className="MuiButtonBase-root MuiListItem-root SuggestionItem-listItem-2 suggestion MuiListItem-gutters MuiListItem-button"
                onBlur={[Function]}
                onClick={null}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="link"
                tabIndex="0"
              >
                <span
                  className="SuggestionItem-container-1"
                  key=".0"
                  role="link"
                  tabIndex="-1"
                  type="submit"
                >
                  <WithStyles(ForwardRef(ListItemIcon))
                    aria-hidden={true}
                    className="SuggestionItem-listIcon-4"
                  >
                    <ForwardRef(ListItemIcon)
                      aria-hidden={true}
                      className="SuggestionItem-listIcon-4"
                      classes={
                        Object {
                          "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                          "root": "MuiListItemIcon-root",
                        }
                      }
                    >
                      <div
                        aria-hidden={true}
                        className="MuiListItemIcon-root SuggestionItem-listIcon-4"
                      >
                        <pure(SearchIcon)>
                          <SearchIcon>
                            <WithStyles(ForwardRef(SvgIcon))>
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                  />
                                  <path
                                    d="M0 0h24v24H0z"
                                    fill="none"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </SearchIcon>
                        </pure(SearchIcon)>
                      </div>
                    </ForwardRef(ListItemIcon)>
                  </WithStyles(ForwardRef(ListItemIcon))>
                  <WithStyles(ForwardRef(ListItemText))
                    className="SuggestionItem-text-9"
                    classes={
                      Object {
                        "root": "SuggestionItem-textContainer-3",
                      }
                    }
                  >
                    <ForwardRef(ListItemText)
                      className="SuggestionItem-text-9"
                      classes={
                        Object {
                          "dense": "MuiListItemText-dense",
                          "inset": "MuiListItemText-inset",
                          "multiline": "MuiListItemText-multiline",
                          "primary": "MuiListItemText-primary",
                          "root": "MuiListItemText-root SuggestionItem-textContainer-3",
                          "secondary": "MuiListItemText-secondary",
                        }
                      }
                    >
                      <div
                        className="MuiListItemText-root SuggestionItem-textContainer-3 SuggestionItem-text-9"
                      >
                        <WithStyles(ForwardRef(Typography))
                          className="MuiListItemText-primary"
                          component="span"
                          display="block"
                          variant="body1"
                        >
                          <ForwardRef(Typography)
                            className="MuiListItemText-primary"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            component="span"
                            display="block"
                            variant="body1"
                          >
                            <span
                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                            >
                              <WithStyles(ForwardRef(Typography))
                                variant="srOnly"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="srOnly"
                                >
                                  <span
                                    className="MuiTypography-root MuiTypography-srOnly"
                                  >
                                    Title text Subtitle text
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Typography))
                                aria-hidden={true}
                                variant="body2"
                              >
                                <ForwardRef(Typography)
                                  aria-hidden={true}
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="body2"
                                >
                                  <p
                                    aria-hidden={true}
                                    className="MuiTypography-root MuiTypography-body2"
                                  >
                                    Title text
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Typography))
                                aria-hidden={true}
                                className="SuggestionItem-subtitle-7"
                                variant="body2"
                              >
                                <ForwardRef(Typography)
                                  aria-hidden={true}
                                  className="SuggestionItem-subtitle-7"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="body2"
                                >
                                  <p
                                    aria-hidden={true}
                                    className="MuiTypography-root SuggestionItem-subtitle-7 MuiTypography-body2"
                                  >
                                    Subtitle text
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </span>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </div>
                    </ForwardRef(ListItemText)>
                  </WithStyles(ForwardRef(ListItemText))>
                </span>
              </li>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
        </ForwardRef(ListItem)>
      </WithStyles(ForwardRef(ListItem))>
    </SuggestionItem>
  </WithStyles(SuggestionItem)>
</injectIntl(WithStyles(SuggestionItem))>
`;
